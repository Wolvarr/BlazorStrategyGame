@page "/"
@using Blazor.Extensions
@using Blazor.Extensions.Canvas.Canvas2D
@using StrategyGameClient.DTOs;
@using StrategyGameClient.DTOs.CreateGame;
@using System.Net.Http
@using StrategyGame.Shared.Models.Lobby;

@inject HttpClient Http
@inject IJSRuntime JsRuntime;
@inject LobbyService lobbyService
@inject NavigationManager navigationManager
@inject ILocalStorageService storageService


<div>
    <button @onclick="@StartNewGame">Start game</button>
</div>

<div>
    <button @onclick="@GetMap">Get Map</button>
</div>

<div class="row">
    <div class="create-lobby-container">
        <EditForm Model="createLobbyModel" OnValidSubmit="CreateLobby">
            <DataAnnotationsValidator />
            <ValidationMessage For="() => createLobbyModel.LobbyName" />
            <label for="lobbyName" class="authInputLabel">Lobby name</label>
            <InputText class="authInputField" @bind-Value="createLobbyModel.LobbyName" placeholder="lobbyName" name="lobbyName" id="lobbyName"></InputText>
            <ValidationMessage For="() => createLobbyModel.MapId" />
            <label for="mapId" class="authInputLabel">Map Id</label>
            <InputNumber class="authInputField" @bind-Value="createLobbyModel.MapId" placeholder="mapId" name="mapId" id="mapId"></InputNumber>
            <button class="authButton" type="submit">Create lobby</button>
        </EditForm>
        @if (currentLobby != null)
        {
            <h1>Current lobby: @currentLobby.LobbyName </h1>
        }
    </div>
</div>



@if (loadedLobbies.Any())
{
    <h1>Available lobbies:</h1>
    @foreach (var lobby in loadedLobbies)
    {
        <div class="row">
            <b>@lobby.LobbyName , @lobby.CurrentPlayers / @lobby.Capacity </b>
        </div>
    }
}



@code {
    CreateLobbyRequest createLobbyModel = new CreateLobbyRequest();

    [CascadingParameter]
    private Task<AuthenticationState> authenticationState { get; set; }

    private string player1Id = "f5249879-ad90-41a5-8206-2a03e4c92d1a";
    private string player2Id = "f5249879-ad90-41a5-8206-2a03e4c92d1b";


    private string mapId = "197";
    private string gameId = "6807a453-04c2-4436-9cc1-0bc682ee7e3e";

    string accessToken = "";
    private LobbyDTO currentLobby = null;
    private List<LobbyDTO> loadedLobbies = new List<LobbyDTO>();

    protected override async Task OnInitializedAsync()
    {
        accessToken = authenticationState.Result.User.FindFirst("AccesToken").Value;
        loadedLobbies = await lobbyService.GetAllLobbies(accessToken);
        currentLobby = await lobbyService.GetCurrentLobby(accessToken);
    }

    public async Task CreateLobby()
    {
        await lobbyService.CreateLobby(createLobbyModel, accessToken);
    }

    [Parameter]
    public CreateGameDTO createGameDTO { get; set; }

    private async Task StartNewGame()
    {
        var DTO = new NewGameDTO(new string[] { player1Id, player2Id }, mapId);
        var resp = await Http.PostAsJsonAsync("engine/newgame", DTO);
        navigationManager.NavigateTo($"maingame/{gameId}");
    }


    private async Task GetMap()
    {
        createGameDTO = await Http.GetFromJsonAsync<CreateGameDTO>("engine/getmap/" + gameId);
    }
}